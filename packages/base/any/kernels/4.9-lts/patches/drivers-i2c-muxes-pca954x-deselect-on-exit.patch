diff -Npur linux-4.9.75/drivers/i2c/muxes/i2c-mux-pca954x.c linux-4.9.75.patch/drivers/i2c/muxes/i2c-mux-pca954x.c
--- linux-4.9.75/drivers/i2c/muxes/i2c-mux-pca954x.c	2018-01-05 22:46:36.000000000 +0800
+++ linux-4.9.75.patch/drivers/i2c/muxes/i2c-mux-pca954x.c	2018-05-18 10:50:14.167568358 +0800
@@ -217,6 +217,7 @@ static int pca954x_probe(struct i2c_clie
 	struct pca954x *data;
 	const struct of_device_id *match;
 	int ret;
+    int deselect_on_exit = 0;
 
 	if (!i2c_check_functionality(adap, I2C_FUNC_SMBUS_BYTE))
 		return -ENODEV;
@@ -245,6 +246,21 @@ static int pca954x_probe(struct i2c_clie
 		return -ENODEV;
 	}
 
+     /*
+     * Check whether we want to deselect the mux after the
+     * transaction.  This can be specified in one of two ways:
+     *
+     * 1. using platform data: pdata->modes[num].deselect_on_exit
+     * 2. using the device tree property deselect_on_exit
+     */
+    if (of_find_property(client->dev.of_node, "deselect-on-exit", NULL)) {
+        deselect_on_exit = 1;
+    }
+
+#ifdef CONFIG_I2C_MUX_PCA954X_DESELECT_ON_EXIT
+        deselect_on_exit = 1;
+#endif
+
 	match = of_match_device(of_match_ptr(pca954x_of_match), &client->dev);
 	if (match)
 		data->chip = of_device_get_match_data(&client->dev);
@@ -273,7 +289,7 @@ static int pca954x_probe(struct i2c_clie
 			idle_disconnect_pd = pdata->modes[num].deselect_on_exit;
 		}
 		data->deselect |= (idle_disconnect_pd ||
-				   idle_disconnect_dt) << num;
+                idle_disconnect_dt || deselect_on_exit) << num;
 
 		ret = i2c_mux_add_adapter(muxc, force, num, class);
 
diff -Npur linux-4.9.75/drivers/i2c/muxes/Kconfig linux-4.9.75.patch/drivers/i2c/muxes/Kconfig
--- linux-4.9.75/drivers/i2c/muxes/Kconfig	2018-01-05 22:46:36.000000000 +0800
+++ linux-4.9.75.patch/drivers/i2c/muxes/Kconfig	2018-05-18 10:37:17.744175470 +0800
@@ -49,6 +49,13 @@ config I2C_MUX_PCA954x
 	  This driver can also be built as a module.  If so, the module
 	  will be called i2c-mux-pca954x.
 
+config I2C_MUX_PCA954X_DESELECT_ON_EXIT
+       bool "Enable deselect-on-exit feature for PCA954X devices."
+       depends on I2C_MUX_PCA954x
+       help
+          If you say yes here you enable the deselect-on-exit feature in
+          the pca954x i2c driver.
+
 config I2C_MUX_PINCTRL
 	tristate "pinctrl-based I2C multiplexer"
 	depends on PINCTRL
