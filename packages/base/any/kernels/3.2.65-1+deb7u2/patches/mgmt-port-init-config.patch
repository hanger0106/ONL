diff --git a/drivers/net/ethernet/broadcom/tg3/tg3.c b/drivers/net/ethernet/broadcom/tg3/tg3.c
index 4894a11..9b7b7b4 100644
--- a/drivers/net/ethernet/broadcom/tg3/tg3.c
+++ b/drivers/net/ethernet/broadcom/tg3/tg3.c
@@ -561,6 +561,7 @@ static const struct {
 
 #define TG3_NUM_TEST	ARRAY_SIZE(ethtool_test_keys)
 
+static int as7716 = -1; /* as7716=1: as7716 switch is used, it needs as7716 specific patch */
 
 static void tg3_write32(struct tg3 *tp, u32 off, u32 val)
 {
@@ -1628,6 +1629,10 @@ static void tg3_mdio_config_5785(struct tg3 *tp)
 static void tg3_mdio_start(struct tg3 *tp)
 {
 	tp->mi_mode &= ~MAC_MI_MODE_AUTO_POLL;
+
+        if (as7716 == 1)
+	    tp->mi_mode |= MAC_MI_MODE_SHORT_PREAMBLE; /* as7716: for accessing external PHY(0x1F) BCM54616S */
+
 	tw32_f(MAC_MI_MODE, tp->mi_mode);
 	udelay(80);
 
@@ -2899,6 +2904,11 @@ static int tg3_phy_reset(struct tg3 *tp)
 		}
 	}
 
+	if (as7716 == 1 && tp->phy_id == TG3_PHY_ID_BCM5718S) {
+		__tg3_writephy(tp, 0x8, 0x10, 0x1d0); /* as7716: set internal phy 0x8 to make linkup */
+		__tg3_writephy(tp, 0x1f, 0x4, 0x5e1); /* as7716 enable 10/100 cability of external phy BCM 54616S*/
+	}
+
 	if (tg3_flag(tp, 5717_PLUS) &&
 	    (tp->phy_flags & TG3_PHYFLG_MII_SERDES))
 		return 0;
@@ -19874,6 +19884,14 @@ static struct pci_driver tg3_driver = {
 
 static int __init tg3_init(void)
 {
+    extern int platform_accton_as7716_32x(void);
+    if (platform_accton_as7716_32x()) {
+        as7716 = 1;
+        printk_once(KERN_INFO "\nAS7716-32X\n");
+    }
+    else
+        as7716 = 0;
+
 #ifdef TG3_VMWARE_NETQ_ENABLE
 	int i;
 	for (i = 0; i < TG3_MAX_NIC; i++) {
